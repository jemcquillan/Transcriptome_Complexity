plot_list[[index]] <- plot1
index <- index + 1
fit <- summary(lm(mean_exonPerGene~mean_transcriptPerGene,data = data))
plot2<-ggplot(data, aes_string(x = "mean_transcriptPerGene", y = "mean_exonPerGene"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'TpG vs EpG',x= "Mean Transcript per Gene", y = "Mean Exon per Gene",
subtitle = paste0('R2 = ',format(fit$r.squared,digits = 3),' p = ',format(fit$coefficients[2,4],digits = 3)))
plot_list[[index]] <- plot2
index <- index + 1
fit <- summary(lm(mean_exonPerGene~mean_exonPerTranscript,data = data))
plot3<-ggplot(data, aes_string(x = "mean_exonPerTranscript", y = "mean_exonPerGene"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'EpT vs EpG',x = "Mean Exon per Transcript", y = "Mean Exon per Gene",
subtitle = paste0('R2 = ',format(fit$r.squared,digits = 3),' p = ',format(fit$coefficients[2,4],digits = 3)))
plot_list[[index]] <- plot3
index <- index + 1
}
pdf('Scatter_plots1.pdf',20,20)
print(cowplot::plot_grid(plotlist = plot_list, nrow = 3, ncol = 3))
dev.off()
Fungi_fit_TpG_EpT <- summary(lm(mean_exonPerTranscript~mean_transcriptPerGene,data = Fungi_data))
Fungi_plot_TpG_EpT<-ggplot(Fungi_data, aes_string(x = "mean_transcriptPerGene", y = "mean_exonPerTranscript"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'Fungi TpG vs EpT',x = "Mean Transcript per Gene", y = "Mean Exon per Transcript",
subtitle = paste0('R2 = ',format(Fungi_fit_TpG_EpT$r.squared,digits = 3),' p = ',format(Fungi_fit_TpG_EpT$coefficients[2,4],digits = 3)))
Fungi_fit_TpG_EpG <- summary(lm(mean_exonPerGene~mean_transcriptPerGene,data = Fungi_data))
Fungi_plot_TpG_EpG<-ggplot(Fungi_data, aes_string(x = "mean_transcriptPerGene", y = "mean_exonPerGene"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'Fungi TpG vs EpG',x= "Mean Transcript per Gene", y = "Mean Exon per Gene",
subtitle = paste0('R2 = ',format(Fungi_fit_TpG_EpG$r.squared,digits = 3),' p = ',format(Fungi_fit_TpG_EpG$coefficients[2,4],digits = 3)))
Fungi_fit_EpT_EpG <- summary(lm(mean_exonPerGene~mean_exonPerTranscript,data = Fungi_data))
Fungi_plot_EpT_EpG<-ggplot(Fungi_data, aes_string(x = "mean_exonPerTranscript", y = "mean_exonPerGene"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'Fungi EpT vs EpG',x = "Mean Exon per Transcript", y = "Mean Exon per Gene",
subtitle = paste0('R2 = ',format(Fungi_fit_EpT_EpG$r.squared,digits = 3),' p = ',format(Fungi_fit_EpT_EpG$coefficients[2,4],digits = 3)))
Fungi_plot_TpG_EpT
library("ggpubr")
library('ggplot2')
setwd("/Volumes/GoogleDrive/My Drive/OrthoDB/Ortholog_Final_Files/")
# Input Data Converted to Dataframes
Deut_data <- read.csv("Deuterostome_Complexity/Deuterostome_merged_complexity/Deuterostome_WT_gtf_species_full_list.csv")
Deut_ortho_data <- read.csv("Deuterostome_Complexity/Deuterostome_merged_complexity/Deuterostome_Ortholog_gtf_species_full_list.csv")
Dros_data <- read.csv("Drosophila_Complexity/Drosophila_merged_complexity/Drosophila_WT_gtf_species_full_list.csv")
Plant_data <- read.csv("Plantae_Complexity/Plantae_merged_complexity/Plantae_WT_gtf_species_full_list.csv")
Fungi_data <- read.csv("Fungi_Complexity/Fungi_merged_complexity/Fungi_WT_gtf_species_full_list.csv")
# Run ANOVA
species <- Deut_data$species
meanTpG <- Deut_data$mean_transcriptPerGene
Deut_one_way <- aov(mean_transcriptPerGene ~ species, data = Deut_data)
summary(Deut_one_way)
shapiro.test(Deut_data$mean_exonPerTranscript)
shapiro.test(Dros_data$mean_exonPerTranscript)
shapiro.test(Plant_data$mean_exonPerTranscript)
shapiro.test(Fungi_data$mean_exonPerTranscript)
###Create correlation plots with stats
all_data <- list(Deut_data,Dros_data,Plant_data)
plot_list <- list()
index <- 1
for (data in all_data){
fit <- summary(lm(mean_exonPerTranscript~mean_transcriptPerGene,data = data))
plot1<-ggplot(data, aes_string(x = "mean_transcriptPerGene", y = "mean_exonPerTranscript"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'TpG vs EpT',x = "Mean Transcript per Gene", y = "Mean Exon per Transcript",
subtitle = paste0('R2 = ',format(fit$r.squared,digits = 3),' p = ',format(fit$coefficients[2,4],digits = 3)))
plot_list[[index]] <- plot1
index <- index + 1
fit <- summary(lm(mean_exonPerGene~mean_transcriptPerGene,data = data))
plot2<-ggplot(data, aes_string(x = "mean_transcriptPerGene", y = "mean_exonPerGene"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'TpG vs EpG',x= "Mean Transcript per Gene", y = "Mean Exon per Gene",
subtitle = paste0('R2 = ',format(fit$r.squared,digits = 3),' p = ',format(fit$coefficients[2,4],digits = 3)))
plot_list[[index]] <- plot2
index <- index + 1
fit <- summary(lm(mean_exonPerGene~mean_exonPerTranscript,data = data))
plot3<-ggplot(data, aes_string(x = "mean_exonPerTranscript", y = "mean_exonPerGene"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'EpT vs EpG',x = "Mean Exon per Transcript", y = "Mean Exon per Gene",
subtitle = paste0('R2 = ',format(fit$r.squared,digits = 3),' p = ',format(fit$coefficients[2,4],digits = 3)))
plot_list[[index]] <- plot3
index <- index + 1
}
Deut_one_way <- aov(mean_transcriptPerGene ~ species, data = Deut_data)
summary(Deut_one_way)
# Input Data Converted to Dataframes
Deut_data <- read.csv("Deuterostome_Complexity/Deuterostome_merged_complexity/Deuterostome_WT_gtf_species_full_list.csv")
Dros_data <- read.csv("Drosophila_Complexity/Drosophila_merged_complexity/Drosophila_WT_gtf_species_full_list.csv")
Plant_data <- read.csv("Plantae_Complexity/Plantae_merged_complexity/Plantae_WT_gtf_species_full_list.csv")
Fungi_data <- read.csv("Fungi_Complexity/Fungi_merged_complexity/Fungi_WT_gtf_species_full_list.csv")
# Run ANOVA Deuterostomes
Deut_species <- Deut_data$species
meanTpG <- Deut_data$mean_transcriptPerGene
Deut_one_way <- aov(mean_transcriptPerGene ~ Deut_species, data = Deut_data)
summary(Deut_one_way)
# Run ANOVA Drosophila
Dros_species <- Dros_data$species
Dros_meanTpG <- Dros_data$mean_transcriptPerGene
Dros_one_way <- aov(mean_transcriptPerGene ~ Dros_species, data = Dros_data)
summary(Dros_one_way)
# Run ANOVA Plantae
Plant_species <- Plant_data$species
Plant_meanTpG <- Plant_data$mean_transcriptPerGene
Plant_one_way <- aov(mean_transcriptPerGene ~ Plant_species, data = Plant_data)
summary(Plant_one_way)
# Run ANOVA Fungi
Fungi_species <- Fungi_data$species
Fungi_meanTpG <- Fungi_data$mean_transcriptPerGene
Fungi_one_way <- aov(mean_transcriptPerGene ~ Fungi_species, data = Fungi_data)
summary(Fungi_one_way)
shapiro.test(Deut_data$mean_exonPerTranscript)
shapiro.test(Dros_data$mean_exonPerTranscript)
shapiro.test(Plant_data$mean_exonPerTranscript)
shapiro.test(Fungi_data$mean_exonPerTranscript)
###Create correlation plots with stats
all_data <- list(Deut_data,Dros_data,Plant_data)
plot_list <- list()
index <- 1
for (data in all_data){
fit <- summary(lm(mean_exonPerTranscript~mean_transcriptPerGene,data = data))
plot1<-ggplot(data, aes_string(x = "mean_transcriptPerGene", y = "mean_exonPerTranscript"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'TpG vs EpT',x = "Mean Transcript per Gene", y = "Mean Exon per Transcript",
subtitle = paste0('R2 = ',format(fit$r.squared,digits = 3),' p = ',format(fit$coefficients[2,4],digits = 3)))
plot_list[[index]] <- plot1
index <- index + 1
fit <- summary(lm(mean_exonPerGene~mean_transcriptPerGene,data = data))
plot2<-ggplot(data, aes_string(x = "mean_transcriptPerGene", y = "mean_exonPerGene"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'TpG vs EpG',x= "Mean Transcript per Gene", y = "Mean Exon per Gene",
subtitle = paste0('R2 = ',format(fit$r.squared,digits = 3),' p = ',format(fit$coefficients[2,4],digits = 3)))
plot_list[[index]] <- plot2
index <- index + 1
fit <- summary(lm(mean_exonPerGene~mean_exonPerTranscript,data = data))
plot3<-ggplot(data, aes_string(x = "mean_exonPerTranscript", y = "mean_exonPerGene"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'EpT vs EpG',x = "Mean Exon per Transcript", y = "Mean Exon per Gene",
subtitle = paste0('R2 = ',format(fit$r.squared,digits = 3),' p = ',format(fit$coefficients[2,4],digits = 3)))
plot_list[[index]] <- plot3
index <- index + 1
}
pdf('Scatter_plots2.pdf',20,20)
print(cowplot::plot_grid(plotlist = plot_list, nrow = 3, ncol = 3))
dev.off()
setwd("/Volumes/GoogleDrive/My Drive/OrthoDB/Ortholog_Final_Files/")
Fungi_data <- read.csv("Fungi_Complexity/Fungi_merged_complexity/Fungi_WT_gtf_species_full_list.csv")
# Run ANOVA
Fungi_species <- Fungi_data$species
Fungi_meanTpG <- Fungi_data$mean_transcriptPerGene
Fungi_one_way <- aov(mean_transcriptPerGene ~ Fungi_species, data = Fungi_data)
summary(Fungi_one_way)
# Run Shapiro Wilks test of normality
shapiro.test(Fungi_data$mean_exonPerTranscript)
Fungi_fit_TpG_EpT <- summary(lm(mean_exonPerTranscript~mean_transcriptPerGene,data = Fungi_data))
Fungi_plot_TpG_EpT<-ggplot(Fungi_data, aes_string(x = "mean_transcriptPerGene", y = "mean_exonPerTranscript"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'Fungi TpG vs EpT',x = "Mean Transcript per Gene", y = "Mean Exon per Transcript",
subtitle = paste0('R2 = ',format(Fungi_fit_TpG_EpT$r.squared,digits = 3),' p = ',format(Fungi_fit_TpG_EpT$coefficients[2,4],digits = 3)))
Fungi_fit_TpG_EpG <- summary(lm(mean_exonPerGene~mean_transcriptPerGene,data = Fungi_data))
Fungi_plot_TpG_EpG<-ggplot(Fungi_data, aes_string(x = "mean_transcriptPerGene", y = "mean_exonPerGene"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'Fungi TpG vs EpG',x= "Mean Transcript per Gene", y = "Mean Exon per Gene",
subtitle = paste0('R2 = ',format(Fungi_fit_TpG_EpG$r.squared,digits = 3),' p = ',format(Fungi_fit_TpG_EpG$coefficients[2,4],digits = 3)))
Fungi_fit_EpT_EpG <- summary(lm(mean_exonPerGene~mean_exonPerTranscript,data = Fungi_data))
Fungi_plot_EpT_EpG<-ggplot(Fungi_data, aes_string(x = "mean_exonPerTranscript", y = "mean_exonPerGene"))+
geom_point(aes_string(color = "group"))+
geom_smooth(method = "lm",color = "black")+
theme_classic()+
labs(title = 'Fungi EpT vs EpG',x = "Mean Exon per Transcript", y = "Mean Exon per Gene",
subtitle = paste0('R2 = ',format(Fungi_fit_EpT_EpG$r.squared,digits = 3),' p = ',format(Fungi_fit_EpT_EpG$coefficients[2,4],digits = 3)))
Fungi_plot_TpG_EpT
Fungi_plot_TpG_EpG
Fungi_plot_EpT_EpG
plot_list <- list(Fungi_plot_TpG_EpT, Fungi_plot_TpG_EpG, Fungi_plot_EpT_EpG)
plot_list
pdf('Sumpplimental_Fungi_Scatter_plots.pdf',20,20)
print(cowplot::plot_grid(plotlist = plot_list, nrow = 3, ncol = 1))
dev.off()
dev.off()
Fungi_plot_EpT_EpG
pdf('Sumpplimental_Fungi_Scatter_plots.pdf',20,20)
print(cowplot::plot_grid(plotlist = plot_list, nrow = 1, ncol = 3))
dev.off()
pdf('Sumpplimental_Fungi_Scatter_plots.pdf',20,15)
print(cowplot::plot_grid(plotlist = plot_list, nrow = 3, ncol = 1))
dev.off()
pdf('Sumpplimental_Fungi_Scatter_plots.pdf', 15, 20)
print(cowplot::plot_grid(plotlist = plot_list, nrow = 3, ncol = 1))
dev.off()
pdf('Sumpplimental_Fungi_Scatter_plots.pdf', 10, 10)
print(cowplot::plot_grid(plotlist = plot_list, nrow = 3, ncol = 1))
dev.off()
pdf('Sumpplimental_Fungi_Scatter_plots.pdf', 13, 13)
print(cowplot::plot_grid(plotlist = plot_list, nrow = 3, ncol = 1))
dev.off()
pdf('Sumpplimental_Fungi_Scatter_plots.pdf', 15, 15)
print(cowplot::plot_grid(plotlist = plot_list, nrow = 3, ncol = 1))
dev.off()
library(tidyverse)
library(ggplot2)
library(rstatix)
library(ggpubr)
library(stringr)
setwd('/Volumes/GoogleDrive/My\ Drive/OrthoDB/Ortholog_Final_Files/Metric_Analysis/')
output_directory <- "/Volumes/GoogleDrive/My\ Drive/OrthoDB/Ortholog_Final_Files/Metric_Analysis/PDF_Results_Check"
complexity_metrics <- read.csv("Complexity_Data/All_Complexity_metrics.csv")
complexity_metrics_plot <- complexity_metrics %>%
tidyr::gather(key = 'group', value = 'variation',TpG.Normalized.Variation,EpT.Normalized.Variation,EpG.Normalized.Variation)
complexity_metrics_plot$group <- stringr::str_remove(complexity_metrics_plot$group,'\\.Normalized\\.Variation')
complexity_metrics_plot$group <- factor(complexity_metrics_plot$group,levels = c('TpG','EpT','EpG'))
complexity_metrics_plot$Higher.Order <- factor(complexity_metrics_plot$Higher.Order,levels = c('Fungi','Plantae','Flies','Deuterostomia'))
ggplot(complexity_metrics_plot, aes(x = group, y = variation)) +
geom_boxplot(aes(color = Higher.Order, fill = Higher.Order), alpha = 0.5) +
ggtitle("Normalized Variance Complexity Metrics") +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.1), aes(color = Higher.Order), alpha = 0.6, size = 0.7)+
scale_color_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
scale_fill_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
labs( y = 'Normalized variation',x ='', color = "Higher Order", fill = "Higher Order") +
theme_classic()
Deuterostomes <- dplyr::filter(complexity_metrics, Higher.Order %in% "Deuterostomia")
Fungus <- dplyr::filter(complexity_metrics, Higher.Order %in% "Fungi")
Drosophila <- dplyr::filter(complexity_metrics, Higher.Order %in% "Flies")
Plants <- dplyr::filter(complexity_metrics, Higher.Order %in% "Plantae")
# Within group EpT vs EpG, Wilcoxon test
wilcox.test(Deuterostomes$EpT.Normalized.Variation,Deuterostomes$EpG.Normalized.Variation)
wilcox.test(Fungus$EpT.Normalized.Variation,Fungus$EpG.Normalized.Variation)
wilcox.test(Drosophila$EpT.Normalized.Variation,Drosophila$EpG.Normalized.Variation)
wilcox.test(Plants$EpT.Normalized.Variation,Plants$EpG.Normalized.Variation)
pdf(paste0(output_directory,'/Mean_Complexity_Metrics_Boxplots.pdf'),8,6)
#Kruskal-Wallis Test
#All group TpG
test <- kruskal.test(mean_transcriptPerGene ~ Higher.Order, data = complexity_metrics)
boxplot(complexity_metrics$mean_transcriptPerGene ~ factor(complexity_metrics$Higher.Order), main = paste0("All Groups Mean TpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.7, las = 2, xlab="", ylab="Mean")
#All group EpT
test <- kruskal.test(complexity_metrics$mean_exonPerTranscript ~ Higher.Order, data = complexity_metrics)
boxplot(complexity_metrics$mean_exonPerTranscript ~ factor(complexity_metrics$Higher.Order), main = paste0("All Groups Mean EpT\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.7, las = 2, xlab="", ylab="Mean")
#All group EpG
test <- kruskal.test(complexity_metrics$mean_exonPerGene ~ Higher.Order, data = complexity_metrics)
boxplot(complexity_metrics$mean_exonPerGene ~ factor(complexity_metrics$Higher.Order), main = paste0("All Groups Mean EpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.7, las = 2, xlab="", ylab="Mean")
# Within group EpT vs EpG, Wilcoxon test
wilcox.test(Deuterostomes$EpT.Normalized.Variation,Deuterostomes$EpG.Normalized.Variation)
wilcox.test(Fungus$EpT.Normalized.Variation,Fungus$EpG.Normalized.Variation)
wilcox.test(Drosophila$EpT.Normalized.Variation,Drosophila$EpG.Normalized.Variation)
wilcox.test(Plants$EpT.Normalized.Variation,Plants$EpG.Normalized.Variation)
#Kruskal-Wallis Test
#All group TpG
test <- kruskal.test(mean_transcriptPerGene ~ Higher.Order, data = complexity_metrics)
ggplot(complexity_metrics_plot, aes(x = group, y = variation)) +
geom_boxplot(aes(color = Higher.Order, fill = Higher.Order), alpha = 0.5) +
ggtitle("Normalized Variance Complexity Metrics") +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.1), aes(color = Higher.Order), alpha = 0.6, size = 0.7)+
scale_color_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
scale_fill_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
labs( y = 'Normalized variation',x ='', color = "Higher Order", fill = "Higher Order") +
theme_classic()
setwd('/Volumes/GoogleDrive/My\ Drive/OrthoDB/Ortholog_Final_Files/Metric_Analysis/')
output_directory <- "/Volumes/GoogleDrive/My\ Drive/OrthoDB/Ortholog_Final_Files/Metric_Analysis/PDF_Results_Check"
complexity_metrics <- read.csv("Complexity_Data/All_Complexity_metrics.csv")
complexity_metrics_plot <- complexity_metrics %>%
tidyr::gather(key = 'group', value = 'variation',TpG.Normalized.Variation,EpT.Normalized.Variation,EpG.Normalized.Variation)
complexity_metrics_plot$group <- stringr::str_remove(complexity_metrics_plot$group,'\\.Normalized\\.Variation')
complexity_metrics_plot$group <- factor(complexity_metrics_plot$group,levels = c('TpG','EpT','EpG'))
complexity_metrics_plot$Higher.Order <- factor(complexity_metrics_plot$Higher.Order,levels = c('Fungi','Plantae','Flies','Deuterostomia'))
ggplot(complexity_metrics_plot, aes(x = group, y = variation)) +
geom_boxplot(aes(color = Higher.Order, fill = Higher.Order), alpha = 0.5) +
ggtitle("Normalized Variance Complexity Metrics") +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.1), aes(color = Higher.Order), alpha = 0.6, size = 0.7)+
scale_color_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
scale_fill_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
labs( y = 'Normalized variation',x ='', color = "Higher Order", fill = "Higher Order") +
theme_classic()
x <- ggplot(complexity_metrics_plot, aes(x = group, y = variation)) +
geom_boxplot(aes(color = Higher.Order, fill = Higher.Order), alpha = 0.5) +
ggtitle("Normalized Variance Complexity Metrics") +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.1), aes(color = Higher.Order), alpha = 0.6, size = 0.7)+
scale_color_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
scale_fill_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
labs( y = 'Normalized variation',x ='', color = "Higher Order", fill = "Higher Order") +
theme_classic()
x
x
ggplot(complexity_metrics_plot, aes(x = group, y = variation)) +
geom_boxplot(aes(color = Higher.Order, fill = Higher.Order), alpha = 0.5) +
ggtitle("Normalized Variance Complexity Metrics") +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.1), aes(color = Higher.Order), alpha = 0.6, size = 0.7)+
scale_color_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
scale_fill_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
labs( y = 'Normalized variation',x ='', color = "Higher Order", fill = "Higher Order") +
theme_classic()
Deuterostomes <- dplyr::filter(complexity_metrics, Higher.Order %in% "Deuterostomia")
Fungus <- dplyr::filter(complexity_metrics, Higher.Order %in% "Fungi")
Drosophila <- dplyr::filter(complexity_metrics, Higher.Order %in% "Flies")
Plants <- dplyr::filter(complexity_metrics, Higher.Order %in% "Plantae")
# Within group EpT vs EpG, Wilcoxon test
wilcox.test(Deuterostomes$EpT.Normalized.Variation,Deuterostomes$EpG.Normalized.Variation)
wilcox.test(Fungus$EpT.Normalized.Variation,Fungus$EpG.Normalized.Variation)
wilcox.test(Drosophila$EpT.Normalized.Variation,Drosophila$EpG.Normalized.Variation)
wilcox.test(Plants$EpT.Normalized.Variation,Plants$EpG.Normalized.Variation)
#Kruskal-Wallis Test
#All group TpG
test <- kruskal.test(mean_transcriptPerGene ~ Higher.Order, data = complexity_metrics)
boxplot(complexity_metrics$mean_transcriptPerGene ~ factor(complexity_metrics$Higher.Order), main = paste0("All Groups Mean TpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.7, las = 2, xlab="", ylab="Mean")
#All group EpT
test <- kruskal.test(complexity_metrics$mean_exonPerTranscript ~ Higher.Order, data = complexity_metrics)
boxplot(complexity_metrics$mean_exonPerTranscript ~ factor(complexity_metrics$Higher.Order), main = paste0("All Groups Mean EpT\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.7, las = 2, xlab="", ylab="Mean")
#All group EpG
test <- kruskal.test(complexity_metrics$mean_exonPerGene ~ Higher.Order, data = complexity_metrics)
boxplot(complexity_metrics$mean_exonPerGene ~ factor(complexity_metrics$Higher.Order), main = paste0("All Groups Mean EpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.7, las = 2, xlab="", ylab="Mean")
#Deuterostome Class TpG
test <- kruskal.test(Deuterostomes$mean_transcriptPerGene ~ group, data = Deuterostomes)
boxplot(Deuterostomes$mean_transcriptPerGene ~ factor(Deuterostomes$group), main = paste0("Deuterostome Class Mean TpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.65, las = 2, xlab="", ylab="Mean")
#Deuterostome Class EpT
test <- kruskal.test(Deuterostomes$mean_exonPerTranscript ~ group, data = Deuterostomes)
boxplot(Deuterostomes$mean_exonPerTranscript ~ factor(Deuterostomes$group), main = paste0("Deuterostome Class Mean EpT\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.65, las = 2, xlab="", ylab="Mean")
#Deuterostome Class EpG
test <- kruskal.test(Deuterostomes$mean_exonPerGene ~ group, data = Deuterostomes)
boxplot(Deuterostomes$mean_exonPerGene ~ factor(Deuterostomes$group), main = paste0("Deuterostome Class Mean EpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.65, las = 2, xlab="", ylab="Mean")
#Fungus Class TpG
test <- kruskal.test(Fungus$mean_transcriptPerGene ~ group, data = Fungus)
boxplot(Fungus$mean_transcriptPerGene ~ factor(Fungus$group), main = paste0("Fungus Class Mean TpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.45, las = 2, xlab="", ylab="Mean")
#Fungus Class EpT
test <- kruskal.test(Fungus$mean_exonPerTranscript ~ group, data = Fungus)
boxplot(Fungus$mean_exonPerTranscript ~ factor(Fungus$group), main = paste0("Fungus Class Mean EpT\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.45, las = 2, xlab="", ylab="Mean")
#Fungus Class EpG
test <- kruskal.test(Fungus$mean_exonPerGene ~ group, data = Fungus)
boxplot(Fungus$mean_exonPerGene ~ factor(Fungus$group), main = paste0("Fungus Class Mean EpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.45, las = 2, xlab="", ylab="Mean")
#Fungus Phylum TpG
test <- kruskal.test(Fungus$mean_transcriptPerGene ~ Phylum, data = Fungus)
boxplot(Fungus$mean_transcriptPerGene ~ factor(Fungus$Phylum), main = paste0("Fungus Phylum Mean TpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.68, las = 2, xlab="", ylab="Mean")
#Fungus Phylum EpT
test <- kruskal.test(Fungus$mean_exonPerTranscript ~ Phylum, data = Fungus)
boxplot(Fungus$mean_exonPerTranscript ~ factor(Fungus$Phylum), main = paste0("Fungus Phylum Mean EpT\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.68, las = 2, xlab="", ylab="Mean")
#Fungus Phylum EpG
test <- kruskal.test(Fungus$mean_exonPerGene ~ Phylum, data = Fungus)
boxplot(Fungus$mean_exonPerGene ~ factor(Fungus$Phylum), main = paste0("Fungus Phylum Mean EpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.68, las = 2, xlab="", ylab="Mean")
#Plants Order TpG
test <- kruskal.test(Plants$mean_transcriptPerGene ~ group, data = Plants)
boxplot(Plants$mean_transcriptPerGene ~ factor(Plants$group), main = paste0("Plants Order Mean TpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.72, las = 2, xlab="", ylab="Mean")
#Plants Order EpT
test <- kruskal.test(Plants$mean_exonPerTranscript ~ group, data = Plants)
boxplot(Plants$mean_exonPerTranscript ~ factor(Plants$group), main = paste0("Plants Order Mean EpT\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.72, las = 2, xlab="", ylab="Mean")
#Plants Order EpG
test <- kruskal.test(Plants$mean_exonPerGene ~ group, data = Plants)
boxplot(Plants$mean_exonPerGene ~ factor(Plants$group), main = paste0("Plants Order Mean EpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.72, las = 2, xlab="", ylab="Mean")
setwd('/Volumes/GoogleDrive/My\ Drive/OrthoDB/Ortholog_Final_Files/Metric_Analysis/')
output_directory <- "/Volumes/GoogleDrive/My\ Drive/OrthoDB/Ortholog_Final_Files/Metric_Analysis/PDF_Results_Check"
complexity_metrics <- read.csv("Complexity_Data/All_Complexity_metrics.csv")
complexity_metrics_plot <- complexity_metrics %>%
tidyr::gather(key = 'group', value = 'variation',TpG.Normalized.Variation,EpT.Normalized.Variation,EpG.Normalized.Variation)
complexity_metrics_plot$group <- stringr::str_remove(complexity_metrics_plot$group,'\\.Normalized\\.Variation')
complexity_metrics_plot$group <- factor(complexity_metrics_plot$group,levels = c('TpG','EpT','EpG'))
complexity_metrics_plot$Higher.Order <- factor(complexity_metrics_plot$Higher.Order,levels = c('Fungi','Plantae','Flies','Deuterostomia'))
ggplot(complexity_metrics_plot, aes(x = group, y = variation)) +
geom_boxplot(aes(color = Higher.Order, fill = Higher.Order), alpha = 0.5) +
ggtitle("Normalized Variance Complexity Metrics") +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.1), aes(color = Higher.Order), alpha = 0.6, size = 0.7)+
scale_color_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
scale_fill_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
labs( y = 'Normalized variation',x ='', color = "Higher Order", fill = "Higher Order") +
theme_classic()
Deuterostomes <- dplyr::filter(complexity_metrics, Higher.Order %in% "Deuterostomia")
Fungus <- dplyr::filter(complexity_metrics, Higher.Order %in% "Fungi")
Drosophila <- dplyr::filter(complexity_metrics, Higher.Order %in% "Flies")
Plants <- dplyr::filter(complexity_metrics, Higher.Order %in% "Plantae")
# Within group EpT vs EpG, Wilcoxon test
wilcox.test(Deuterostomes$EpT.Normalized.Variation,Deuterostomes$EpG.Normalized.Variation)
wilcox.test(Fungus$EpT.Normalized.Variation,Fungus$EpG.Normalized.Variation)
wilcox.test(Drosophila$EpT.Normalized.Variation,Drosophila$EpG.Normalized.Variation)
wilcox.test(Plants$EpT.Normalized.Variation,Plants$EpG.Normalized.Variation)
setwd('/Volumes/GoogleDrive/My\ Drive/OrthoDB/Ortholog_Final_Files/Metric_Analysis/')
output_directory <- "/Volumes/GoogleDrive/My\ Drive/OrthoDB/Ortholog_Final_Files/Metric_Analysis/PDF_Results_Check"
complexity_metrics <- read.csv("Complexity_Data/All_Complexity_metrics.csv")
complexity_metrics_plot <- complexity_metrics %>%
tidyr::gather(key = 'group', value = 'variation',TpG.Normalized.Variation,EpT.Normalized.Variation,EpG.Normalized.Variation)
complexity_metrics_plot$group <- stringr::str_remove(complexity_metrics_plot$group,'\\.Normalized\\.Variation')
complexity_metrics_plot$group <- factor(complexity_metrics_plot$group,levels = c('TpG','EpT','EpG'))
complexity_metrics_plot$Higher.Order <- factor(complexity_metrics_plot$Higher.Order,levels = c('Fungi','Plantae','Flies','Deuterostomia'))
ggplot(complexity_metrics_plot, aes(x = group, y = variation)) +
geom_boxplot(aes(color = Higher.Order, fill = Higher.Order), alpha = 0.5) +
ggtitle("Normalized Variance Complexity Metrics") +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.1), aes(color = Higher.Order), alpha = 0.6, size = 0.7)+
scale_color_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
scale_fill_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
labs( y = 'Normalized variation',x ='', color = "Higher Order", fill = "Higher Order") +
theme_classic()
Deuterostomes <- dplyr::filter(complexity_metrics, Higher.Order %in% "Deuterostomia")
Fungus <- dplyr::filter(complexity_metrics, Higher.Order %in% "Fungi")
Drosophila <- dplyr::filter(complexity_metrics, Higher.Order %in% "Flies")
Plants <- dplyr::filter(complexity_metrics, Higher.Order %in% "Plantae")
# Within group EpT vs EpG, Wilcoxon test
wilcox.test(Deuterostomes$EpT.Normalized.Variation,Deuterostomes$EpG.Normalized.Variation)
wilcox.test(Fungus$EpT.Normalized.Variation,Fungus$EpG.Normalized.Variation)
wilcox.test(Drosophila$EpT.Normalized.Variation,Drosophila$EpG.Normalized.Variation)
wilcox.test(Plants$EpT.Normalized.Variation,Plants$EpG.Normalized.Variation)
pdf(paste0(output_directory,'/Mean_Complexity_Metrics_Boxplots.pdf'),8,6)
#Kruskal-Wallis Test
#All group TpG
test <- kruskal.test(mean_transcriptPerGene ~ Higher.Order, data = complexity_metrics)
boxplot(complexity_metrics$mean_transcriptPerGene ~ factor(complexity_metrics$Higher.Order), main = paste0("All Groups Mean TpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.7, las = 2, xlab="", ylab="Mean")
#All group EpT
test <- kruskal.test(complexity_metrics$mean_exonPerTranscript ~ Higher.Order, data = complexity_metrics)
boxplot(complexity_metrics$mean_exonPerTranscript ~ factor(complexity_metrics$Higher.Order), main = paste0("All Groups Mean EpT\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.7, las = 2, xlab="", ylab="Mean")
#All group EpG
test <- kruskal.test(complexity_metrics$mean_exonPerGene ~ Higher.Order, data = complexity_metrics)
boxplot(complexity_metrics$mean_exonPerGene ~ factor(complexity_metrics$Higher.Order), main = paste0("All Groups Mean EpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.7, las = 2, xlab="", ylab="Mean")
#Deuterostome Class TpG
test <- kruskal.test(Deuterostomes$mean_transcriptPerGene ~ group, data = Deuterostomes)
boxplot(Deuterostomes$mean_transcriptPerGene ~ factor(Deuterostomes$group), main = paste0("Deuterostome Class Mean TpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.65, las = 2, xlab="", ylab="Mean")
#Deuterostome Class EpT
test <- kruskal.test(Deuterostomes$mean_exonPerTranscript ~ group, data = Deuterostomes)
boxplot(Deuterostomes$mean_exonPerTranscript ~ factor(Deuterostomes$group), main = paste0("Deuterostome Class Mean EpT\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.65, las = 2, xlab="", ylab="Mean")
#Deuterostome Class EpG
test <- kruskal.test(Deuterostomes$mean_exonPerGene ~ group, data = Deuterostomes)
boxplot(Deuterostomes$mean_exonPerGene ~ factor(Deuterostomes$group), main = paste0("Deuterostome Class Mean EpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.65, las = 2, xlab="", ylab="Mean")
#Fungus Class TpG
test <- kruskal.test(Fungus$mean_transcriptPerGene ~ group, data = Fungus)
boxplot(Fungus$mean_transcriptPerGene ~ factor(Fungus$group), main = paste0("Fungus Class Mean TpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.45, las = 2, xlab="", ylab="Mean")
#Fungus Class EpT
test <- kruskal.test(Fungus$mean_exonPerTranscript ~ group, data = Fungus)
boxplot(Fungus$mean_exonPerTranscript ~ factor(Fungus$group), main = paste0("Fungus Class Mean EpT\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.45, las = 2, xlab="", ylab="Mean")
#Fungus Class EpG
test <- kruskal.test(Fungus$mean_exonPerGene ~ group, data = Fungus)
boxplot(Fungus$mean_exonPerGene ~ factor(Fungus$group), main = paste0("Fungus Class Mean EpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.45, las = 2, xlab="", ylab="Mean")
#Fungus Phylum TpG
test <- kruskal.test(Fungus$mean_transcriptPerGene ~ Phylum, data = Fungus)
boxplot(Fungus$mean_transcriptPerGene ~ factor(Fungus$Phylum), main = paste0("Fungus Phylum Mean TpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.68, las = 2, xlab="", ylab="Mean")
#Fungus Phylum EpT
test <- kruskal.test(Fungus$mean_exonPerTranscript ~ Phylum, data = Fungus)
boxplot(Fungus$mean_exonPerTranscript ~ factor(Fungus$Phylum), main = paste0("Fungus Phylum Mean EpT\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.68, las = 2, xlab="", ylab="Mean")
#Fungus Phylum EpG
test <- kruskal.test(Fungus$mean_exonPerGene ~ Phylum, data = Fungus)
boxplot(Fungus$mean_exonPerGene ~ factor(Fungus$Phylum), main = paste0("Fungus Phylum Mean EpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.68, las = 2, xlab="", ylab="Mean")
#Plants Order TpG
test <- kruskal.test(Plants$mean_transcriptPerGene ~ group, data = Plants)
boxplot(Plants$mean_transcriptPerGene ~ factor(Plants$group), main = paste0("Plants Order Mean TpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.72, las = 2, xlab="", ylab="Mean")
#Plants Order EpT
test <- kruskal.test(Plants$mean_exonPerTranscript ~ group, data = Plants)
boxplot(Plants$mean_exonPerTranscript ~ factor(Plants$group), main = paste0("Plants Order Mean EpT\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.72, las = 2, xlab="", ylab="Mean")
#Plants Order EpG
test <- kruskal.test(Plants$mean_exonPerGene ~ group, data = Plants)
boxplot(Plants$mean_exonPerGene ~ factor(Plants$group), main = paste0("Plants Order Mean EpG\nKruskal-Wallis rank sum test\nChi-Sq = ",format(test$statistic,digits = 4)," p= ",format(test$p.value,digits = 4)), cex.axis = 0.72, las = 2, xlab="", ylab="Mean")
ggplot
complexity_metrics_plot
x <- ggplot(complexity_metrics_plot, aes(x = group, y = variation)) +
geom_boxplot(aes(color = Higher.Order, fill = Higher.Order), alpha = 0.5) +
ggtitle("Normalized Variance Complexity Metrics") +
#geom_jitter(position = position_jitterdodge(jitter.width = 0.1), aes(color = Higher.Order), alpha = 0.6, size = 0.7)+
scale_color_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
scale_fill_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
labs( y = 'Normalized variation',x ='', color = "Higher Order", fill = "Higher Order") +
theme_classic()
x
plot(x)
ggplot(x)
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(rstatix)
library(ggpubr)
library(stringr)
setwd('/Volumes/GoogleDrive/My\ Drive/OrthoDB/Ortholog_Final_Files/Metric_Analysis/')
output_directory <- "/Volumes/GoogleDrive/My\ Drive/OrthoDB/Ortholog_Final_Files/Metric_Analysis/PDF_results"
complexity_metrics <- read.csv("Complexity_Data/All_Complexity_metrics.csv")
complexity_metrics_plot <- complexity_metrics %>%
tidyr::gather(key = 'group', value = 'variation',TpG.Normalized.Variation,EpT.Normalized.Variation,EpG.Normalized.Variation)
complexity_metrics_plot$group <- stringr::str_remove(complexity_metrics_plot$group,'\\.Normalized\\.Variation')
complexity_metrics_plot$group <- factor(complexity_metrics_plot$group,levels = c('TpG','EpT','EpG'))
complexity_metrics_plot$Higher.Order <- factor(complexity_metrics_plot$Higher.Order,levels = c('Fungi','Plantae','Flies','Deuterostomia'))
ggplot(complexity_metrics_plot, aes(x = group, y = variation)) +
geom_boxplot(aes(color = Higher.Order, fill = Higher.Order), alpha = 0.5) +
ggtitle("Normalized Variance Complexity Metrics") +
geom_jitter(position = position_jitterdodge(jitter.width = 0.1), aes(color = Higher.Order), alpha = 0.6, size = 0.7)+
scale_color_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
scale_fill_manual(values = c("#D95F02","#1B9E77","#7570B3","#E7298A"))+
labs(y = 'Normalized variation',x ='', color = "Higher Order", fill = "Higher Order") +
theme_classic()
#Sanity check for mcmc convergence
#Convergence WT
mcmcout <- read.csv("drosophila_WT_mean_EpT_mcmc_out.txt", header=T)
plot(mcmcout$logLik ~ mcmcout$generation)
library(BAMMtools)
library(viridis)
library(coda)
setwd("/Volumes/GoogleDrive/My Drive/OrthoDB/Ortholog_Final_Files/Drosophila_Complexity/Drosophila_tree/Drosophila_BAMM_Analysis")
#Sanity check for mcmc convergence
#Convergence WT
mcmcout <- read.csv("drosophila_WT_mean_EpT_mcmc_out.txt", header=T)
plot(mcmcout$logLik ~ mcmcout$generation)
